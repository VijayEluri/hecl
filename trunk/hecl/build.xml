<project name="Hecl" default="build" basedir=".">
  <description>
    Hecl build file.
  </description>
  <!--
  additional properties are read from "build.properties" file
  which can be created as machine-dependant parameters.
  -->
  <property file="build.properties"/>
  <path id="buildclasspath">
    <pathelement location="build/core"/>
  </path>
  <!--
  Additional classpath locations, specified in build.properties file
  -->
  <path id="classpath">
    <pathelement location="${lib.classpath.01}"/>
    <pathelement location="${lib.classpath.02}"/>
    <pathelement location="${lib.classpath.03}"/>
    <pathelement location="${lib.classpath.04}"/>
    <pathelement location="${lib.classpath.05}"/>
    <pathelement location="${lib.classpath.06}"/>
    <pathelement location="${lib.classpath.07}"/>
    <pathelement location="${lib.classpath.08}"/>
    <pathelement location="${lib.classpath.09}"/>
    <pathelement location="${lib.classpath.10}"/>
    <pathelement location="${lib.classpath.11}"/>
    <pathelement location="${lib.classpath.12}"/>
    <pathelement location="${lib.classpath.13}"/>
    <pathelement location="${lib.classpath.14}"/>
    <pathelement location="${lib.classpath.15}"/>
    <pathelement location="${lib.classpath.16}"/>
    <pathelement location="${lib.classpath.17}"/>
    <pathelement location="${lib.classpath.18}"/>
    <pathelement location="${lib.classpath.19}"/>
    <pathelement location="${lib.classpathel0}"/>
    <pathelement location="${lib.classpathel1}"/>
    <pathelement location="${lib.classpathel2}"/>
    <pathelement location="${lib.classpathel3}"/>
    <pathelement location="${lib.classpathel4}"/>
    <pathelement location="${lib.classpathel5}"/>
    <pathelement location="${lib.classpathel6}"/>
    <pathelement location="${lib.classpathel7}"/>
    <pathelement location="${lib.classpathel8}"/>
    <pathelement location="${lib.classpathel9}"/>
    <pathelement location="${lib.classpathel0}"/>
    <pathelement location="${lib.classpathel1}"/>
    <pathelement location="${lib.classpathel2}"/>
    <pathelement location="${lib.classpathel3}"/>
    <pathelement location="${lib.classpathel4}"/>
    <pathelement location="${lib.classpathel5}"/>
    <pathelement location="${lib.classpathel6}"/>
    <pathelement location="${lib.classpathel7}"/>
    <pathelement location="${lib.classpathel8}"/>
    <pathelement location="${lib.classpathel9}"/>
    <pathelement location="${lib.classpathel0}"/>
    <pathelement location="${lib.classpathel1}"/>
    <pathelement location="${lib.classpathel2}"/>
    <pathelement location="${lib.classpathel3}"/>
    <pathelement location="${lib.classpathel4}"/>
    <pathelement location="${lib.classpathel5}"/>
    <pathelement location="${lib.classpathel6}"/>
    <pathelement location="${lib.classpathel7}"/>
    <pathelement location="${lib.classpathel8}"/>
    <pathelement location="${lib.classpathel9}"/>
    <pathelement location="${lib.classpathel0}"/>
  </path>
  <!-- virtual targets -->
  <target name="clean" description="Clean the build"
    depends="cleanOut,cleanBuild,cleanClasses">
    <delete file="Hecl.jar"/>
  </target>

  <target name="build" description="Complete build"
    depends="compile,package"/>

  <target name="compile" description="Complete everything"
    depends="compileCore,compileApplet,compileHttp,buildJ2MEtest"/>

  <target name="package" description="Package things into JARs"
    depends="packageJARs,packageApplet,packageJ2MEtest"/>

  <!-- clean targets -->
  <target name="cleanOut" description="Clean out directory">
    <delete dir="out"/>
  </target>
  <target name="cleanBuild" description="Clean build files">
    <delete dir="build"/>
  </target>
  <target name="cleanClasses" description="Clean Eclipse classes files">
    <delete dir="classes"/>
  </target>

  <!-- compile targets -->
  <target name="initCompile" description="Initialize compilation">
    <mkdir dir="build" />
  </target>

  <target name="compileCore"
    depends="initCompile"
    description="Compile core Hecl functionality">
    <mkdir dir="build" />
    <mkdir dir="build/core" />
    <javac srcdir="core" destdir="build/core">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileApplet"
    depends="initCompile,compileCore"
    description="Compile Hecl applet">
    <mkdir dir="build"/>
    <mkdir dir="build/applet"/>
    <javac srcdir="applet" destdir="build/applet">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileHttp"
    depends="initCompile,compileCore"
    description="Compile Hecl http support">
    <mkdir dir="build"/>
    <mkdir dir="build/http"/>
    <javac srcdir="http" destdir="build/http" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compilePjava"
    depends="initCompile,compileCore"
    description="Compile Hecl Pjava support">
    <mkdir dir="build"/>
    <mkdir dir="build/pjava"/>
    <javac srcdir="pjava" destdir="build/pjava" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileCommandline"
    depends="initCompile,compileCore"
    description="Compile Hecl command line support">
    <mkdir dir="build"/>
    <mkdir dir="build/commandline"/>
    <javac srcdir="commandline" destdir="build/commandline" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- package targsts -->
  <target name="initPackage"
    description="Initialized packaging">
    <mkdir dir="out"/>
  </target>

  <!-- Build the command line package.  We first add the core stuff,
  then add the Hecl command line target. -->
  <target name="packageCommandline" description="Create Jar for command
    line Hecl" depends="compileCommandline,compilePjava">
    <jar destfile="Hecl.jar" basedir="build/core" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/pjava" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/commandline"
    includes="Hecl.class" update="true">
      <manifest>
        <attribute name="Main-Class" value="Hecl"/>
      </manifest>
    </jar>
  </target>

  <target name="packageJARs" description="Create Jar distributions of the sources"
    depends="compile,initPackage">
    <jar destfile="out/heclCore.jar" basedir="build/core"/>
    <jar destfile="out/heclApplet.jar" basedir="build/applet"/>
    <jar destfile="out/heclHttp.jar" basedir="build/http"/>
  </target>

  <target name="packageApplet" description="Create HTML applet structure"
    depends="initPackage,packageJARs">
    <mkdir dir="out/applet"/>
    <copy file="out/heclCore.jar" tofile="out/applet/heclCore.jar"/>
    <copy file="out/heclApplet.jar" tofile="out/applet/heclApplet.jar"/>
    <copy file="out/heclHttp.jar" tofile="out/applet/heclHttp.jar"/>
    <copy file="HTML/applet.html" tofile="out/applet/index.html"/>
  </target>

  <!-- J2ME versions -->
  <target name="packageJ2MESource"
    depends="initPackage"
    description="Create source structure for J2ME">
    <mkdir dir="out/j2mesource"/>
    <copy todir="out/j2mesource">
      <fileset dir="core"/>
      <fileset dir="http"/>
      <fileset dir="j2me"/>
    </copy>
  </target>
  <target name="buildJ2MEtest"
    depends="packageJ2MESource"
    description="Builds J2ME Hecl test">
    <mkdir dir="out/j2me"/>
    <javac srcdir="out/j2mesource" destdir="out/j2me" target="1.1">
      <classpath refid="classpath"/>
    </javac>
  </target>
  <target name="packageJ2MEtest"
    depends="buildJ2MEtest"
    description="Packages J2ME Hecl test as a JAR">
    <jar destfile="out/j2me.jar" basedir="out/j2me">
      <manifest>
	<attribute name="MicroEdition-Configuration" value="CLDC-1.0"/>
	<attribute name="MIDlet-Name" value="Heclmidlettest"/>
	<attribute name="MIDlet-Vendor" value="Dedasys"/>
	<attribute name="MIDlet-Permissions" value="javax.microedition.io.Connector.http"/>
	<attribute name="MIDlet-1" value="Heclmidlettest, Heclmidlettest.png, Heclmidlettest"/>
	<attribute name="MIDlet-Version" value="1.2"/>
	<attribute name="MicroEdition-Profile" value="MIDP-1.0"/>
      </manifest>
    </jar>
  </target>

  <!-- Docs -->
  <target name="docs">
    <exec executable="xsltproc">
      <arg value="--nonet" />
      <arg value="--stringparam" />
      <arg value="html.stylesheet" />
      <arg value="hecl.css" />
      <arg value="-o" />
      <arg value="docs/" />
      <arg value="docs/chunk.xsl" />
      <arg value="docs/hecl.xml" />
    </exec>
  </target>

</project>
