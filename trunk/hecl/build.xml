<project name="Hecl" default="build" basedir=".">
  <description>
    Hecl build file.
  </description>
  <!--
  additional properties are read from "build.properties" file
  which can be created as machine-dependant parameters.
  -->
  <property file="build.properties"/>

  <property name="midp_home" value="/home/davidw/install/WTK2.2"/>

  <path id="buildclasspath">
    <pathelement location="build/core"/>
  </path>

  <path id="filesclasspath">
    <pathelement location="build/files"/>
  </path>

  <path id="modulesclasspath">
    <pathelement location="build/modules"/>
  </path>

  <path id="http_standardclasspath">
    <pathelement location="build/http_standard"/>
  </path>

  <path id="loadclasspath">
    <pathelement location="build/load"/>
  </path>

  <path id="floatclasspath">
    <pathelement location="build/float"/>
  </path>


  <!--
  Additional classpath locations, specified in build.properties file
  -->
  <path id="classpath">
  </path>

  <!-- virtual targets -->
  <target name="clean" description="Clean the build"
    depends="cleanOut,cleanBuild,cleanClasses,cleanJ2ME">
    <delete file="Hecl.jar"/>
  </target>

  <target name="build" description="Complete build"
    depends="compile,package"/>

  <target name="compile" description="Complete everything"
    depends="compileCore,compileCommandline,compileApplet"/>

  <target name="package" description="Package things into JARs"
    depends="packageJARs,packageApplet"/>

  <!-- clean targets -->
  <target name="cleanOut" description="Clean out directory">
    <delete dir="out"/>
  </target>
  <target name="cleanBuild" description="Clean build files">
    <delete dir="build"/>
  </target>
  <target name="cleanClasses" description="Clean Eclipse classes files">
    <delete dir="classes"/>
  </target>
  <target name="cleanJ2ME" description="Clean J2ME classes">
    <delete dir="j2me/classes"/>
    <delete file="j2me/Hecl.jar"/>
  </target>


  <!-- compile targets -->
  <target name="initCompile" description="Initialize compilation">
    <mkdir dir="build" />
  </target>

  <target name="compileCore"
    depends="initCompile"
    description="Compile core Hecl functionality">
    <mkdir dir="build" />
    <mkdir dir="build/core" />
    <javac srcdir="core" destdir="build/core">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileFloat" depends="compileCore"
  description="Compile floating point enabled code">
    <mkdir dir="build/float" />
    <javac srcdir="float" destdir="build/float">
      <classpath refid="modulesclasspath"/>
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileApplet"
    depends="initCompile,compileCore"
    description="Compile Hecl applet">
    <mkdir dir="build"/>
    <mkdir dir="build/applet"/>
    <javac srcdir="applet" destdir="build/applet">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compileFiles"
    depends="initCompile,compileCore,compileModules"
    description="Compile Hecl files support">
    <mkdir dir="build"/>
    <mkdir dir="build/files"/>
    <javac srcdir="files" destdir="build/files" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
      <classpath refid="modulesclasspath"/>
    </javac>
  </target>

  <target name="compileModules"
    depends="initCompile,compileCore"
    description="Compile Hecl modules support">
    <mkdir dir="build"/>
    <mkdir dir="build/modules"/>
    <javac srcdir="modules" destdir="build/modules" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>


  <target name="compileLoad"
    depends="initCompile,compileCore,compileModules"
    description="Compile Hecl load (classloader) support">
    <mkdir dir="build"/>
    <mkdir dir="build/load"/>
    <javac srcdir="load" destdir="build/load" debug="true">
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
      <classpath refid="filesclasspath"/>
      <classpath refid="modulesclasspath"/>
    </javac>
  </target>

  <target name="compileHttpStandard"
    depends="initCompile,compileCore,compileModules"
    description="Compile J2SE Hecl http support">
    <mkdir dir="build"/>
    <mkdir dir="build/http_standard"/>

    <javac destdir="build/http_standard" debug="true">
      <src path="http"/>
      <src path="http_standard"/>
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
      <classpath refid="modulesclasspath"/>
    </javac>
  </target>

  <target name="compileCommandline"
    depends="initCompile,compileCore,compileFiles,compileHttpStandard,compileLoad,compileModules,compileFloat"
    description="Compile Hecl command line support">
    <mkdir dir="build"/>
    <mkdir dir="build/commandline"/>
    <javac srcdir="commandline" destdir="build/commandline"
    debug="true">
      <classpath refid="floatclasspath"/>
      <classpath refid="filesclasspath"/>
      <classpath refid="http_standardclasspath"/>
      <classpath refid="loadclasspath"/>
      <classpath refid="modulesclasspath"/>
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- package targsts -->
  <target name="initPackage"
    description="Initialized packaging">
    <mkdir dir="out"/>
  </target>

  <!-- Build the command line package.  We first add the core stuff,
  then add the Hecl command line target. -->
  <target name="packageCommandline" description="Create Jar for command line Hecl" depends="compileCommandline,compileHttpStandard,compileFloat">
    <jar destfile="Hecl.jar" basedir="build/core" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/files" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/load" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/modules" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/float" update="true"/>
    <jar destfile="Hecl.jar" basedir="build/commandline" includes="Hecl.class" update="true">
      <manifest>
        <attribute name="Main-Class" value="Hecl"/>
      </manifest>
    </jar>
  </target>

  <target name="packageStandalone" description="Create Jar for
    standalone Hecl" depends="compileCommandline,compileHttpStandard">
    <jar destfile="StandaloneHecl.jar" basedir="build/core"
    update="true"/>
    <jar destfile="StandaloneHecl.jar" basedir="build/modules" update="true"/>
    <jar destfile="StandaloneHecl.jar" basedir="build/files"
    update="true"/>
    <jar destfile="StandaloneHecl.jar" basedir="build/float" update="true"/>
    <jar destfile="StandaloneHecl.jar" basedir="build/http_standard" update="true"/>
    <jar destfile="StandaloneHecl.jar" basedir="build/commandline" includes="StandaloneHecl.class" update="true">
      <manifest>
        <attribute name="Main-Class" value="StandaloneHecl"/>
      </manifest>
    </jar>
  </target>

  <target name="packageJARs" description="Create Jar distributions of the sources"
    depends="compile,initPackage">
    <jar destfile="out/heclCore.jar" basedir="build/core"/>
    <jar destfile="out/heclApplet.jar" basedir="build/applet"/>
    <jar destfile="out/heclFiles.jar" basedir="build/files"/>
    <jar destfile="out/heclHttp.jar" basedir="build/http_standard/"/>
    <jar destfile="out/heclLoad.jar" basedir="build/load"/>
    <jar destfile="out/heclModules.jar" basedir="build/modules"/>
  </target>

  <target name="packageApplet" description="Create HTML applet structure"
    depends="initPackage,packageJARs">
    <mkdir dir="out/applet"/>
    <copy file="out/heclCore.jar" tofile="out/applet/heclCore.jar"/>
    <copy file="out/heclApplet.jar" tofile="out/applet/heclApplet.jar"/>
    <copy file="out/heclFiles.jar" tofile="out/applet/heclFiles.jar"/>
<!--     <copy file="out/heclHttp.jar" tofile="out/applet/heclHttp.jar"/> -->
    <copy file="HTML/applet.html" tofile="out/applet/index.html"/>
  </target>

  <!-- J2ME versions -->

  <!-- NOTE: replace these with your own locations! -->
  <path id="j2mebootclasspath">
    <pathelement
    location="/home/davidw/install/WTK2.2/lib/cldcapi10.jar"/>
    <pathelement
    location="/home/davidw/install/WTK2.2/lib/midpapi10.jar"/>
  </path>

  <target name="compileHttpMicro"
    depends="initCompile,compileCore"
    description="Compile J2ME Hecl http support">
    <mkdir dir="build"/>
    <mkdir dir="build/http_micro"/>

    <javac destdir="build/http_micro" debug="true" target="1.1">
      <src path="http"/>
      <src path="http_micro"/>
      <bootclasspath refid="j2mebootclasspath"/>
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
      <classpath refid="modulesclasspath"/>
    </javac>
  </target>

  <target name="compileJ2MECore" description="Compile the core classes
    for J2ME">
    <mkdir dir="j2me/classes" />
    <javac srcdir="core"
      destdir="j2me/classes" target="1.1">
      <bootclasspath refid="j2mebootclasspath"/>
    </javac>
  </target>

  <target name="compileJ2ME"
    description="Compile the J2ME specific stuff"
    depends ="compileJ2MECore">
    <javac srcdir="j2me"
      target="1.1"
      destdir="j2me/classes">
      <bootclasspath refid="j2mebootclasspath"/>
      <classpath>
	<pathelement location="j2me/classes/" />
      </classpath>
    </javac>
  </target>

  <target name="compileJ2MEextras" description="Compile in extras for
    J2ME" depends="compileHttpMicro">

    <javac srcdir="modules" destdir="j2me/classes" debug="true">
      <bootclasspath refid="j2mebootclasspath"/>
      <classpath refid="buildclasspath"/>
      <classpath refid="classpath"/>
    </javac>

    <copy todir="j2me/classes">
      <fileset dir="build/http_micro"/>
    </copy>
  </target>

  <target name="preverify" description="Preverify j2me code" depends="compileJ2ME,compileJ2MEextras">
    <mkdir dir="j2me/preverified"/>
    <exec executable="${midp_home}/bin/preverify">
      <arg line="-cldc"/>
      <arg line="-classpath ${midp_home}/lib/midpapi10.jar:${midp_home}/lib/cldcapi10.jar"/>
      <arg line="-d j2me/preverified"/>
      <arg line="j2me/classes"/>
    </exec>
  </target>

  <target name="packageJ2ME" depends="preverify">
    <jar destfile="j2me/Hecl.jar" basedir="j2me/preverified"
    update="true" excludes="org/hecl/PrintThing.class">
      <manifest>
	<attribute name="MIDlet-Name" value="Hecl"/>
	<attribute name="MIDlet-Vendor" value="Dedasys"/>
	<attribute name="MIDlet-Permissions" value="javax.microedition.io.Connector.http"/>
	<attribute name="MIDlet-1" value="Hecl, Hecl.png, Hecl"/>
	<attribute name="MIDlet-Version" value="1.0"/>
	<attribute name="MicroEdition-Profile" value="MIDP-1.0"/>
	<attribute name="MicroEdition-Configuration" value="CLDC-1.0"/>
      </manifest>
    </jar>
    <jar destfile="j2me/Hecl.jar" basedir="j2me/"
    includes="script.hcl" update="true"/>
    <jar destfile="j2me/Hecl.jar" basedir="j2me/"
    includes="Hecl.png" update="true"/>
  </target>

  <target name="JadFile" depends="packageCommandline,packageJ2ME">
    <java jar="Hecl.jar" fork="true">
      <arg value="j2me/updatejad.hcl"/>
      <arg value="j2me/Hecl.jad"/>
      <arg value="j2me/Hecl.jar"/>
    </java>
  </target>

  <target name="J2ME" depends="JadFile">
  </target>

  <!-- Docs -->

  <target name="javadocs">
    <javadoc packagenames="org.hecl,org.hecl.*"
      destdir="docs/jdocs"
      author="true"
      version="true"
      use="true">
      <sourcepath>
	<pathelement path="core"/>
      </sourcepath>
      <sourcepath>
	<pathelement path="files"/>
      </sourcepath>
      <sourcepath>
	<pathelement path="modules"/>
      </sourcepath>
      <sourcepath>
	<pathelement path="http"/>
      </sourcepath>
      <sourcepath>
	<pathelement path="float"/>
      </sourcepath>
    </javadoc>
  </target>

  <target name="docbookresolve">
    <exec executable="xmllint" output="docs/hecl-processed.xml" error="docs/processing-errors.txt">
      <arg value="--xinclude" />
      <arg value="docs/hecl.xml" />
    </exec>
  </target>

  <target name="docbook" depends="docbookresolve">
    <exec executable="xsltproc">
      <arg value="--nonet" />
      <arg value="--stringparam" />
      <arg value="html.stylesheet" />
      <arg value="hecl.css" />
      <arg value="--stringparam"/>
      <arg value="generate.section.toc.level"/>
      <arg value="5"/>
      <!-- 5 is likely higher than we will need. -->
      <arg value="-o"/>
      <arg value="docs/" />
      <arg value="docs/chunk.xsl" />
      <arg value="docs/hecl-processed.xml" />
    </exec>
  </target>

  <target name="docs" depends="javadocs,docbook">
  </target>

</project>
